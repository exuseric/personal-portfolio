---
import { Image } from "astro:assets";
import data from "@/data/navigation.json";
import { Icon } from "astro-icon/components";
// const data = await getCollection("navigation");
const { nav } = data;
import LogoImage from "@/images/logo.png";
import NavMenu from "@/components/navigation/NavMenu.astro";
import SocialButtons from "@/components/navigation/SocialButtons.astro";
---

<header class="primary_nav container">
    <div class="primary_nav__container">
        <a href="/" class="primary_nav__logo">
            <Image
                src={LogoImage}
                width={LogoImage.width}
                height={LogoImage.height}
                alt={nav.logo.text}
                loading="eager"
                decoding="sync"
                class="primary_nav__logo_img"
            />
        </a>
        <nav data-nav class="primary_nav__links" aria-label="Main Navigation">
            <NavMenu />
            <div class="primary_nav__actions">
                <SocialButtons />
                <button
                    class="primary_nav__toggle btn btn--icon btn--primary btn--icon_lg hide-lg hide-md"
                    aria-expanded="false"
                    aria-label="Toggle Navigation"
                    data-toggle-button
                >
                    <Icon
                        name="mdi:menu"
                        aria-hidden="true"
                        focusable="false"
                        data-toggle-icon
                        data-is-visible="true"
                    />
                    <Icon
                        name="mdi:close"
                        aria-hidden="true"
                        focusable="false"
                        data-toggle-icon
                        data-is-visible="false"
                    />
                </button>
            </div>
        </nav>
    </div>
</header>
<style>
    .primary_nav {
        --nav-height: 64px;
        position: fixed;
        top: 0;
        width: 100%;
        height: 100%;
        max-height: var(--nav-height);
        z-index: 1000;
        padding: var(--space-2) 0;
        /* overflow-x: hidden; */
    }

    .primary_nav * {
    }

    .primary_nav__container {
        display: flex;
        flex-flow: row wrap;
        align-items: center;
        justify-content: space-between;
        gap: var(--space-2);

        width: 100%;
        padding: var(--space-2) var(--space-6);
        outline: 2px solid var(--gray-100);
        color: oklch(from var(--color-brand-lighter) calc(l +.90) c h);
        background-color: var(--color-brand-lighter);
    }
    .primary_nav__logo {
        display: inline-flex;
        width: max-content;
        height: max-content;

        /* background: red; */
    }
    .primary_nav__logo_img {
        object-fit: contain;
        object-position: center;
        max-height: var(--nav-height);
        width: auto;
    }

    .primary_nav__actions {
        display: flex;
        flex-flow: row wrap;
        align-items: center;
        gap: var(--space-3);
    }
    [data-toggle-icon][data-is-visible="false"] {
        display: none;
    }
    [data-toggle-icon][data-is-visible="true"] {
        display: block;
    }

    @media (min-width: 768px) {
        .primary_nav__links {
            position: relative;
            isolation: isolate;

            justify-self: end;
            display: flex;
            flex-flow: row wrap;
            align-items: flex-end;
            gap: var(--space-4);

            width: max-content;
            align-items: center;
        }
    }
</style>
<script>
    document.addEventListener("DOMContentLoaded", () => {
        const toggleButton = document.querySelector(
            "[data-toggle-button]",
        ) as HTMLButtonElement;
        const menu = document.querySelector("[data-menu]") as HTMLElement;

        if (toggleButton && menu) {
            toggleButton.addEventListener("click", () => {
                const toggleIcons = document.querySelectorAll(
                    "[data-toggle-icon]",
                ) as NodeListOf<HTMLElement>;
                const isOpen = menu.dataset.isOpen === "true";
                const newState = !isOpen;

                // Update menu state
                menu.dataset.isOpen = String(newState);
                toggleButton.setAttribute("aria-expanded", String(newState));

                // Toggle icons visibility
                toggleIcons.forEach((icon) => {
                    const isVisible = icon.dataset.isVisible === "true";
                    icon.dataset.isVisible = String(!isVisible);
                });
            });
        }
    });
</script>
