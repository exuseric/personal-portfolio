---
import Button from "@/components/Button/Button.astro";
---

<form class="contact__form" id="contactForm">
    <div class="form-group">
        <label for="name" class="form-label">Full name</label>
        <input
                id="name"
                name="name"
                type="text"
                class="input"
                placeholder="Enter your name"
                autocomplete="name"
                minlength="2"
                required
                transition:persist
        />
        <p class="form-helper form-helper-error" data-error-for="name">Name must be at least 2 characters.</p>
    </div>
    <div class="form-group">
        <label for="email" class="form-label">Email Address</label>
        <input
                id="email"
                name="email"
                type="email"
                class="input"
                pattern="^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$"
                placeholder="mail@example.com"
                autocomplete="email"
                required
                transition:persist
        />
        <p class="form-helper form-helper-error" data-error-for="email">Invalid email address; mail@example.com</p>
    </div>
    <div class="form-group">
        <label for="inquiry" class="form-label">Inquiry</label>
        <select name="inquiry" id="inquiry" transition:persist>
            <option value="General Inquiry" selected>General Inquiry</option>
            <option value="Project Inquiry">Project Inquiry</option>
        </select>
    </div>
    <div class="form-group">
        <label for="message" class="form-label">Your Message</label>
        <textarea id="message" name="message" class="textarea" rows="4" maxlength="1000" required
                  transition:persist></textarea>
        <p class="form-helper form-helper-error" data-error-for="message">Your message must be at least 10 characters
            long</p>
    </div>


    <div class="form-group">
        <Button type="submit" variant="primary" as="default" label="Send Message" attributes={{
            dataset: {
                isSubmitting: false,
                isSuccess: false,
                isError: false,
            }
        }}/>
    </div>
</form>

<style>

</style>

<script>
    import {actions, isInputError} from 'astro:actions';

    const form = document.querySelector("#contactForm") as HTMLFormElement
    const submitButton = form.querySelector("button[type='submit']") as HTMLButtonElement

    form.addEventListener("submit", async (e) => {
        e.preventDefault()

        const formData = new FormData(form)

        submitButton.textContent = "Sending Message..."
        const {data, error} = await actions.contact.sendToMe(formData)

        if (isInputError(error)) {
            const fields = error.fields
            Object.keys(fields).forEach((fieldName) => {
                const errorElement = form.querySelector(`[data-error-for="${fieldName}"]`) as HTMLElement
                errorElement.textContent = fields[fieldName].join(', ')
                errorElement.style.display = "block"
            })
        } else {
            // Clear previous error messages
            const errorElements = form.querySelectorAll('.form-helper-error') as NodeListOf<HTMLElement>
            errorElements.forEach((el) => {
                el.style.display = "none"
            })
        }


        if (!data?.error) {
            const {data} = await actions.contact.sendAutoReply(formData)

            if (!data?.error) {
                submitButton.textContent = "Message Sent!"
                submitButton.classList.toggle("btn--success", true)
            }
        }

        setTimeout(() => {
            submitButton.textContent = "Send Message"
            submitButton.classList.toggle("btn--success", false)
        }, 2000)

        form.reset()
    })
</script>
